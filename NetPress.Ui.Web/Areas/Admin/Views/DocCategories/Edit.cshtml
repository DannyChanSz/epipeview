@model NetPress.Models.DocCategory

@using System.Web.Script.Serialization;
@using NetPress.Models;

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    string Uploaded = "/Uploaded/Original/";
    string json = string.Empty;

    string ImgPath = string.Empty;
    string ImgName = string.Empty;

    if (ViewBag.pic != null)
    {
        Pic pic = ViewBag.pic;
        ImgName = pic.Url;
        ImgPath = Uploaded + pic.Url;

        //JavaScriptSerializer serializer = new JavaScriptSerializer();
        //json = serializer.Serialize(pic); //序列化成JSON

        json = "[{'Url':'"+pic.Url+"','SubTypeTag':'"+pic.SubTypeTag+"'}]";
    }
}

<h2>Edit</h2>

<script src="~/Scripts/jquery-1.10.2.js"></script>

<script src="~/Plugins/plupload-2.1.2/js/plupload.full.min.js"></script>
<style>
    .form-group, .col-md-10 {
        padding: 5px;
    }
</style>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>DocCategory</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.DocCategoryId)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsListPic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="height:40px;">
                <div class="checkbox" style="margin-left:150px;">
                    @Html.EditorFor(model => model.IsListPic)
                    @Html.ValidationMessageFor(model => model.IsListPic, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <span class="control-label col-md-2">图片</span>

            <div class="col-md-10">
                <input type="hidden" name="Photo" id="Photo" value="@json">
                <img src="@ImgPath" id="image" style="width:150px;height:150px;" />
                <div id="filelist" style="clear:both"></div>
                <br />
                <div id="container">
                    <a id="pickfiles" href="javascript:;">[选择文件]</a>
                    <a id="uploadfiles" href="javascript:;">[开始上传]</a>
                </div>
                <br />

                <script src="~/Scripts/ImageUoload.js"></script>
                <script>

                    var Uploaded = "/Uploaded/Original/";
                    var ReturnFiles = new Array();
                    var uploader = createUpload('container', 'pickfiles', 'uploadfiles', 'filelist');


                    uploader.bind("FileUploaded", function (up, file, info) {


                        var url = $.parseJSON(info.response).url;

                        document.getElementById('filelist').innerHTML += '<div >' + file.name + "->" + url + ' (' + plupload.formatSize(file.size) + ') <b></b></div>';


                        $("#image").attr('src', Uploaded + url);

                        var tempic = new mpic(url, "文章分类");
                        ReturnFiles.push(tempic);

                        $("#Photo").val(JSON.stringify(ReturnFiles));
                    });

                    uploader.init();
                </script>

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Url, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ParentId, "ParentId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ParentId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ParentId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KeyWords, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.KeyWords, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.KeyWords, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
